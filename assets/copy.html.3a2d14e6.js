import{_ as n,o as s,c as a,a as e}from"./app.39751670.js";const p={},t=e(`<h1 id="\u6DF1\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u6D45\u62F7\u8D1D</h1><h4 id="\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6D45\u62F7\u8D1D</h4><p>\u53EA\u62F7\u8D1D\u4E00\u5C42\u3002\u6D45\u62F7\u8D1D\u662F\u62F7\u8D1D\u540E\u4E24\u4E2A\u5BF9\u8C61\u5730\u5740\u4E0D\u76F8\u7B49\uFF0C\u4F46\u4E24\u4E2A\u5BF9\u8C61\u7684\u90E8\u5206\u5C5E\u6027\u5730\u5740\u76F8\u7B49\uFF0C\u65B0\u5BF9\u8C61\u5E76\u6CA1\u6709\u62F7\u8D1D\u6240\u6709\u7684\u5C5E\u6027\uFF0C\u800C\u662F\u590D\u7528\u539F\u5BF9\u8C61\u4E2D\u7684\u503C\u3002</p><ul><li><code>Object.assign()</code> \u65B9\u6CD5\u53EF\u4EE5\u628A\u4EFB\u610F\u591A\u4E2A\u7684\u6E90\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u679A\u4E3E\u5C5E\u6027\u62F7\u8D1D\u7ED9\u76EE\u6807\u5BF9\u8C61\uFF0C\u7136\u540E\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u3002<code>Object.assign()</code> \u62F7\u8D1D\u7684\u662F\u5BF9\u8C61\u7684\u5C5E\u6027\u7684\u5F15\u7528\uFF0C\u800C\u4E0D\u662F\u5BF9\u8C61\u672C\u8EAB\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span> <span class="token comment">// \u6D45\u62F7\u8D1D</span>

obj2<span class="token punctuation">.</span>base<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>base<span class="token punctuation">.</span>name<span class="token punctuation">,</span> obj2<span class="token punctuation">.</span>base<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">//Tom Tom</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>for ... in</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newObj
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Object.keys()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cloneObj</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> clone <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    clone<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> clone
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Object.entries()</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cloneObj</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> clone <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    clone<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> clone
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D</h4><p>\u6DF1\u62F7\u8D1D\u662F\u62F7\u8D1D\u540E\u4E24\u4E2A\u5BF9\u8C61\u4E0D\u4EC5\u5730\u5740\u4E0D\u76F8\u7B49\uFF0C\u4E24\u4E2A\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u5730\u5740\u90FD\u4E0D\u76F8\u7B49\u3002\u65B0\u5BF9\u8C61\u548C\u539F\u5BF9\u8C61\u4E0D\u5171\u4EAB\u5185\u5B58\uFF0C\u4FEE\u6539\u65B0\u5BF9\u8C61\u4E0D\u4F1A\u6539\u53D8\u539F\u5BF9\u8C61\u3002</p><p><strong>JSON \u8F6C\u6362</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> newObj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u5982\u679C\u5BF9\u8C61\u6709\u51FD\u6570\uFF0C\u51FD\u6570\u65E0\u6CD5\u88AB\u62F7\u8D1D\u4E0B\u6765</li><li>\u65E0\u6CD5\u62F7\u8D1D\u5BF9\u8C61\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027\u548C\u65B9\u6CD5</li><li>\u5F53\u6570\u636E\u7684\u5C42\u6B21\u5F88\u6DF1\uFF0C\u4F1A\u6808\u6EA2\u51FA</li></ul><p><strong>\u9012\u5F52</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u6DF1\u62F7\u8D1D
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">obj</span> \u8981\u62F7\u8D1D\u7684\u5BF9\u8C61
 */</span>
<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> obj <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// obj \u662F null \uFF0C\u6216\u8005\u4E0D\u662F\u5BF9\u8C61\u548C\u6570\u7EC4\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">return</span> obj
  <span class="token punctuation">}</span>

  <span class="token comment">// \u521D\u59CB\u5316\u8FD4\u56DE\u7ED3\u679C</span>
  <span class="token keyword">let</span> result
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4FDD\u8BC1 key \u662F\u539F\u578B\u7684\u5C5E\u6027</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9012\u5F52\u8C03\u7528\uFF01\uFF01\uFF01</span>
      result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8FD4\u56DE\u7ED3\u679C</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u65E0\u6CD5\u4FDD\u5B58\u5F15\u7528</li><li>\u5F53\u6570\u636E\u5C42\u6B21\u5F88\u6DF1\uFF0C\u4F1A\u6808\u6EA2\u51FA</li></ul>`,21),o=[t];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","copy.html.vue"]]);export{r as default};
