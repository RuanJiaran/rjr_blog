import{_ as e,o as p,c as t,b as s,d as n,e as o,a as c,r as l}from"./app.c4ba29fa.js";const i={},u=c(`<h1 id="\u6DF1\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u6D45\u62F7\u8D1D</h1><p>\u6DF1\u62F7\u8D1D\u548C\u6D45\u62F7\u8D1D\u662F\u53EA\u9488\u5BF9 Object \u548C Array \u8FD9\u6837\u7684\u5F15\u7528\u6570\u636E\u7C7B\u578B\u7684\u3002</p><h2 id="\u5BF9\u8C61\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u8D4B\u503C" aria-hidden="true">#</a> \u5BF9\u8C61\u8D4B\u503C</h2><p>\u5F53\u6211\u4EEC\u628A\u4E00\u4E2A\u5BF9\u8C61\u8D4B\u503C\u7ED9\u4E00\u4E2A\u65B0\u7684\u53D8\u91CF\u65F6\uFF0C\u8D4B\u7684\u5176\u5B9E\u662F\u8BE5\u5BF9\u8C61\u7684\u5728\u6808\u4E2D\u7684\u5730\u5740\uFF0C\u800C\u4E0D\u662F\u5806\u4E2D\u7684\u6570\u636E\u3002\u4E5F\u5C31\u662F\u4E24\u4E2A\u5BF9\u8C61\u6307\u5411\u7684\u662F\u540C\u4E00\u4E2A\u5B58\u50A8\u7A7A\u95F4\uFF0C\u65E0\u8BBA\u54EA\u4E2A\u5BF9\u8C61\u53D1\u751F\u6539\u53D8\uFF0C\u5176\u5B9E\u90FD\u662F\u6539\u53D8\u7684\u5B58\u50A8\u7A7A\u95F4\u7684\u5185\u5BB9\uFF0C\u56E0\u6B64\uFF0C\u4E24\u4E2A\u5BF9\u8C61\u662F\u8054\u52A8\u7684\u3002</p><h2 id="\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6D45\u62F7\u8D1D</h2><p>\u6D45\u62F7\u8D1D\u662F\u6309\u4F4D\u62F7\u8D1D\u5BF9\u8C61\uFF0C\u5B83\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u6709\u7740\u539F\u59CB\u5BF9\u8C61\u5C5E\u6027\u503C\u7684\u4E00\u4EFD\u7CBE\u786E\u62F7\u8D1D\u3002\u5982\u679C\u5C5E\u6027\u662F\u57FA\u672C\u7C7B\u578B\uFF0C\u62F7\u8D1D\u7684\u5C31\u662F\u57FA\u672C\u7C7B\u578B\u7684\u503C\uFF1B\u5982\u679C\u5C5E\u6027\u662F\u5185\u5B58\u5730\u5740\uFF08\u5F15\u7528\u7C7B\u578B\uFF09\uFF0C\u62F7\u8D1D\u7684\u5C31\u662F\u5185\u5B58\u5730\u5740\u3002</p><h4 id="\u6D45\u62F7\u8D1D\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D\u65B9\u6CD5" aria-hidden="true">#</a> \u6D45\u62F7\u8D1D\u65B9\u6CD5</h4><h5 id="object-assign" tabindex="-1"><a class="header-anchor" href="#object-assign" aria-hidden="true">#</a> Object.assign()</h5><ul><li><code>Object.assign()</code> \u65B9\u6CD5\u53EF\u4EE5\u628A\u4EFB\u610F\u591A\u4E2A\u7684\u6E90\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u679A\u4E3E\u5C5E\u6027\u62F7\u8D1D\u7ED9\u76EE\u6807\u5BF9\u8C61\uFF0C\u7136\u540E\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u3002<code>Object.assign()</code> \u62F7\u8D1D\u7684\u662F\u5BF9\u8C61\u7684\u5C5E\u6027\u7684\u5F15\u7528\uFF0C\u800C\u4E0D\u662F\u5BF9\u8C61\u672C\u8EAB\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6D45\u62F7\u8D1D</span>

obj2<span class="token punctuation">.</span>base<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>base<span class="token punctuation">.</span>name<span class="token punctuation">,</span> obj2<span class="token punctuation">.</span>base<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Tom Tom</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="slice" tabindex="-1"><a class="header-anchor" href="#slice" aria-hidden="true">#</a> slice()</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;kobe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arrcopy <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arrcopy<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;copy&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// copy</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="concat" tabindex="-1"><a class="header-anchor" href="#concat" aria-hidden="true">#</a> concat()</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;kobe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arrcopy <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arrcopy<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;copy&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// copy</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="for-in" tabindex="-1"><a class="header-anchor" href="#for-in" aria-hidden="true">#</a> for ... in</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newObj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="object-keys" tabindex="-1"><a class="header-anchor" href="#object-keys" aria-hidden="true">#</a> Object.keys()</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cloneObj</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> clone <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    clone<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> clone<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="object-entries" tabindex="-1"><a class="header-anchor" href="#object-entries" aria-hidden="true">#</a> Object.entries()</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cloneObj</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> clone <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    clone<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> clone<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D</h2><p>\u6DF1\u62F7\u8D1D\u662F\u62F7\u8D1D\u540E\u4E24\u4E2A\u5BF9\u8C61\u4E0D\u4EC5\u5730\u5740\u4E0D\u76F8\u7B49\uFF0C\u4E24\u4E2A\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u5730\u5740\u90FD\u4E0D\u76F8\u7B49\u3002\u65B0\u5BF9\u8C61\u548C\u539F\u5BF9\u8C61\u4E0D\u5171\u4EAB\u5185\u5B58\uFF0C\u4FEE\u6539\u65B0\u5BF9\u8C61\u4E0D\u4F1A\u6539\u53D8\u539F\u5BF9\u8C61\u3002</p><h4 id="json-\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#json-\u8F6C\u6362" aria-hidden="true">#</a> JSON \u8F6C\u6362</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> newObj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u5982\u679C\u5BF9\u8C61\u6709\u51FD\u6570\uFF0C\u51FD\u6570\u65E0\u6CD5\u88AB\u62F7\u8D1D\u4E0B\u6765</li><li>\u65E0\u6CD5\u62F7\u8D1D\u5BF9\u8C61\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027\u548C\u65B9\u6CD5</li><li>\u5F53\u6570\u636E\u7684\u5C42\u6B21\u5F88\u6DF1\uFF0C\u4F1A\u6808\u6EA2\u51FA</li></ul><h4 id="\u9012\u5F52\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u5B9E\u73B0" aria-hidden="true">#</a> \u9012\u5F52\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u6DF1\u62F7\u8D1D
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">obj</span> \u8981\u62F7\u8D1D\u7684\u5BF9\u8C61
 */</span>
<span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> obj <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// obj \u662F null \uFF0C\u6216\u8005\u4E0D\u662F\u5BF9\u8C61\u548C\u6570\u7EC4\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u521D\u59CB\u5316\u8FD4\u56DE\u7ED3\u679C</span>
  <span class="token keyword">let</span> result<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4FDD\u8BC1 key \u662F\u539F\u578B\u7684\u5C5E\u6027</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9012\u5F52\u8C03\u7528\uFF01\uFF01\uFF01</span>
      result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8FD4\u56DE\u7ED3\u679C</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u65E0\u6CD5\u4FDD\u5B58\u5F15\u7528</li><li>\u5F53\u6570\u636E\u5C42\u6B21\u5F88\u6DF1\uFF0C\u4F1A\u6808\u6EA2\u51FA</li></ul><h4 id="lodash-\u5E93" tabindex="-1"><a class="header-anchor" href="#lodash-\u5E93" aria-hidden="true">#</a> lodash \u5E93</h4>`,31),r={href:"https://www.lodashjs.com/docs/lodash.cloneDeep#_clonedeepvalue",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const a=l("ExternalLinkIcon");return p(),t("div",null,[u,s("p",null,[n("\u4F7F\u7528 "),s("a",r,[n("lodash"),o(a)]),n(" \u5E93\u63D0\u4F9B\u7684 cloneDeep \u5B9E\u73B0\u6DF1\u62F7\u8D1D")])])}const m=e(i,[["render",k],["__file","copy.html.vue"]]);export{m as default};
