import{_ as a,o as s,c as n,a as e}from"./app.dcb2b369.js";const t={},p=e(`<h1 id="\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> \u7C7B\u578B\u65AD\u8A00</h1><h2 id="\u7C7B\u578B\u65AD\u8A00-1" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00-1" aria-hidden="true">#</a> \u7C7B\u578B\u65AD\u8A00 <!-- {docsify-ignore} --></h2><h5 id="\u4E3A\u4EC0\u4E48\u8981\u7528\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u8981\u7528\u65AD\u8A00" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u8981\u7528\u65AD\u8A00</h5><blockquote><p>\u6709\u65F6\u5019\uFF0C\u5F53\u6211\u4EEC\u5728\u7528\u4E00\u4E2A\u53D8\u91CF\u7684\u65F6\u5019\u4E0D\u77E5\u9053\u53D8\u91CF\u5C5E\u4E8E\u4EC0\u4E48\u7C7B\u578B\uFF0C\u4F46\u7528\u7684\u65F6\u5019\u786E\u5B9E\u5F53\u6307\u5B9A\u7C7B\u578B\u6765\u7528\u7684\u65F6\u5019</p></blockquote><h5 id="\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#\u7279\u70B9" aria-hidden="true">#</a> \u7279\u70B9\uFF1A</h5><p>1.\u5B83\u6CA1\u6709\u8FD0\u884C\u65F6\u7684\u5F71\u54CD\uFF0C\u53EA\u662F\u5728\u7F16\u8BD1\u9636\u6BB5\u8D77\u4F5C\u7528</p><p>2.TypeScript \u4F1A\u5047\u8BBE\u4F60\uFF0C\u7A0B\u5E8F\u5458\uFF0C\u5DF2\u7ECF\u8FDB\u884C\u4E86\u5FC5\u987B\u7684\u68C0\u67E5</p><h5 id="\u5C16\u62EC\u53F7\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5C16\u62EC\u53F7\u8BED\u6CD5" aria-hidden="true">#</a> \u5C16\u62EC\u53F7\u8BED\u6CD5</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">someValue</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token string">&quot;this is a string&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token literal-property property">strLength</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>someValue<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="as-\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#as-\u8BED\u6CD5" aria-hidden="true">#</a> as \u8BED\u6CD5</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">someValue</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token string">&quot;this is a string&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token literal-property property">strLength</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token punctuation">(</span>someValue <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!&gt;\u5728 TypeScript \u91CC\u4F7F\u7528 JSX \u65F6\uFF0C\u53EA\u6709 as \u8BED\u6CD5\u65AD\u8A00\u662F\u88AB\u5141\u8BB8\u7684</p>`,12),r=[p];function o(i,c){return s(),n("div",null,r)}const d=a(t,[["render",o],["__file","as.html.vue"]]);export{d as default};
